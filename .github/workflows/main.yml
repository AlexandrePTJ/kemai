name: CI
on: [push, workflow_dispatch]

jobs:
  job:
    name: ${{ matrix.os }}_qt-${{ matrix.qt_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2022]
        qt_version: [6.5.0, 5.15.2]
        include:
          - os: windows-2022
            qt_tools: 'tools_opensslv3_x64'
            cmake_preset: 'release-win'
            artifact_path: 'cmake-build-release-win/Kemai-*.msi'
          - os: ubuntu-22.04
            qt_tools: 'tools_opensslv3_src'
            cmake_preset: 'release'
            artifact_path: 'cmake-build-release/Kemai-*.AppImage'
          - os: macos-13
            cmake_preset: 'release-macos'
            artifact_path: 'dist/Kemai-*.dmg'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # Setup dependencies
      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest

      - if: contains(matrix.os, 'windows')
        name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Qt ${{ matrix.qt_version }}
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt_version }}
          tools: ${{ matrix.qt_tools }}
          cache: true
          aqtversion: '==3.1.*'

      # OS dependencies
      - if: contains(matrix.os, 'ubuntu')
        name: Install Linux dev dependencies
        run: sudo apt install libxss-dev libxkbcommon-x11-dev libxcb-cursor0

      - if: contains(matrix.os, 'ubuntu') && startsWith(matrix.qt_version, '6')
        name: Build OpenSSLv3
        run: |
          cd $IQTA_TOOLS/OpenSSLv3/src
          ./Configure && make -j3

      # Build
      - name: Configure
        run: |
          cmake --preset ${{ matrix.cmake_preset }}

      - name: Build
        run: |
          cmake --build --preset ${{ matrix.cmake_preset }}

      # Package Windows
      - if: contains(matrix.os, 'windows') && startsWith(matrix.qt_version, '6')
        name: Create Windows package
        run: |
          cmake --build --preset ${{ matrix.cmake_preset }} --target package

      # Package Linux
      - if: contains(matrix.os, 'ubuntu') && startsWith(matrix.qt_version, '6')
        name: Create Linux package
        run: |
          sudo add-apt-repository universe
          sudo apt install libfuse2
          chmod +x bundle/linux/create_appimage.sh
          ./bundle/linux/create_appimage.sh -q $Qt6_DIR -b cmake-build-release -o $IQTA_TOOLS/OpenSSLv3/src

      # Package Mac
      - if: contains(matrix.os, 'macos') && startsWith(matrix.qt_version, '6')
        name: Create Linux package
        run: |
          chmod +x bundle/macos/create_dmg.sh
          ./bundle/macos/create_dmg.sh --qt_path $Qt6_DIR --build_path cmake-build-release-macos

      # Create release if on built on a tag
      - if: startsWith(matrix.qt_version, '6') && startsWith(github.ref, 'refs/tags/')
        name: Create/Update release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: true
          artifacts: ${{ matrix.artifact_path }}
